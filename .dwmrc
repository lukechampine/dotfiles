# Separators
darklight () {
    echo -ne "\x01\xC2\xB9\x02"
}
lightdark () {
    echo -ne "\x03\xC2\xB9\x04"
}

# Widget functions

batt () {
    PRESENT=`cat /sys/class/power_supply/BAT0/present`
    STATUS=`cat /sys/class/power_supply/BAT0/status`
    if [ "$PRESENT" != "0" ]; then
        CHARGE=`cat /sys/class/power_supply/BAT0/capacity`
        if [ $CHARGE -eq 100 ]; then
            SYMBOL="\xC2\xA6"
        elif [ $CHARGE -ge 80 ]; then
            SYMBOL="\xC2\xAB"
        elif [ $CHARGE -ge 60 ]; then
            SYMBOL="\xC2\xAA"
        elif [ $CHARGE -ge 40 ]; then
            SYMBOL="\xC2\xA9"
        elif [ $CHARGE -ge 20 ]; then
            SYMBOL="\xC2\xA8"
        else
            SYMBOL="\xC2\xA7"
        fi
        case $STATUS in
            Full)
                SIGN="=";;
            Charging)
                SIGN="+";;
            Discharging)
                SIGN="-";;
            Unknown)
                SIGN="?";;
        esac
        # blink while charging
        if [ $SIGN = "+" ] && [ $BLINK = "true" ]; then
            SYMBOL="\xC2\xA6"
        fi
        # blink while dying
        if [ $SIGN = "-" ] && [ $CHARGE -le 20 ] && [ $BLINK = "true" ]; then
            CHARGE="\x05$CHARGE"
        fi
        echo -ne "$SYMBOL $CHARGE${SIGN}"
    else
        echo "\xC2\xA6 AC"
    fi
}

cpu() {
    CPU="$(eval $(awk '/^cpu /{print "previdle=" $5 "; prevtotal=" $2+$3+$4+$5 }' /proc/stat); sleep 0.4;
        eval $(awk '/^cpu /{print "idle=" $5 "; total=" $2+$3+$4+$5 }' /proc/stat);
        intervaltotal=$((total-${prevtotal:-0}));
        echo "$((100*( (intervaltotal) - ($idle-${previdle:-0}) ) / (intervaltotal) ))")"
    echo -ne "\xC2\xA5 $CPU%"
}

cputemp () {
    TEMP="`sensors | awk 'NR==3 {print substr($2,2,4)}'`"
    echo -ne "\xC3\x81 $TEMP\xC2\xBAC"
}

datetime () {
    echo -e "\xC2\xAE `date '+%I:%M %p'`"
}

fanspeed () {
    SPEED="`cat /sys/bus/platform/devices/thinkpad_hwmon/fan1_input`"
    echo -ne "\xC3\x80 $SPEED RPM"
}

mem () {
    MEM="`free -m | awk 'NR==3 { print $3 }'`"
    echo -ne "\xC2\xA4 $MEM MB"
}

vol () {
    VOL="`amixer sget PCM | awk 'NR==6 {print}' | cut -f 2 -d '[' | cut -f 1 -d '%'`"
    if [ $VOL -ge 60 ]; then
        LEVEL="\xC2\xB2 ${VOL}%"
    elif [ $VOL -ge 30 ]; then
        LEVEL="\xC2\xB1 ${VOL}%"
    else
        LEVEL="\xC2\xB0 ${VOL}%"
    fi
    echo -ne "$LEVEL"
}

wifi () {
    LAN="`ifconfig eth0 | awk '/inet / {print $2}'`"
    WLAN="`/sbin/iwgetid`"
    if [ -n "$WLAN" ]; then
        ESSID="`/sbin/iwgetid | awk -F \":\" '{print $2}' | sed -e 's/\"//g'`"
        QUALITY="`cat /proc/net/wireless | tail -1 | cut -b 16-17`"
        let QUALITY=QUALITY*100/70
        echo -ne "\xC2\xAC $ESSID"
    elif [ -n "$LAN" ]; then
        echo -ne "\xC2\xAD $LAN"
    else
        echo -ne "\xC2\xAD Not connected"
    fi
}

# boolean variable, flipped every update to allow for blinking
BLINK=true
invert () {
    if [ $BLINK = "true" ]; then
        BLINK=false 
    else
        BLINK=true
    fi
}

# Send widget text to xsetroot, update every two seconds
while true; do
    invert;
    xsetroot -name "`darklight``cpu` `lightdark``mem` `darklight``cputemp` `lightdark``fanspeed` `darklight``wifi` `lightdark``vol` `darklight``batt` `lightdark``datetime`"
    sleep 1
done
